#ifdef __arm__

#include "ARMV30MZ/ARMV30MZmac.h"
#include "Sphinx/Sphinx.i"

	.global empty_IO_R
	.global empty_IO_W
	.global rom_W
	.global mem_R0
	.global mem_R7

//	.global setBootRomOverlay


	.syntax unified
	.arm

	.section .text
	.align 2
;@----------------------------------------------------------------------------
empty_IO_R:					;@ Read bad IO address (error)
;@----------------------------------------------------------------------------
	mov r11,r11					;@ No$GBA breakpoint
	mov r0,#0x10
	bx lr
;@----------------------------------------------------------------------------
empty_IO_W:					;@ Write bad IO address (error)
;@----------------------------------------------------------------------------
	mov r11,r11					;@ No$GBA breakpoint
	mov r0,#0x18
	bx lr
;@----------------------------------------------------------------------------
rom_W:						;@ Write ROM address (error)
;@----------------------------------------------------------------------------
	mov r11,r11					;@ No$GBA breakpoint
	mov r0,#0xB0
	bx lr
;@----------------------------------------------------------------------------
//setBootRomOverlay:			;@ r0=arg0, 0=remove overlay, 1=WS, 2=WSC/SC
;@----------------------------------------------------------------------------
//	cmp r0,#0
//	ldrne r1,=bootRomSwitch
//	adr r3,commandList
//	ldrne r0,[r3,r0,lsl#2]
//	strne r0,[r1]
//commandList:
//	bx lr
//	subs r2,r2,#0xFC00

;@----------------------------------------------------------------------------

#ifdef NDS
	.section .itcm						;@ For the NDS ARM9
#elif GBA
	.section .iwram, "ax", %progbits	;@ For the GBA
#endif
	.align 2

;@----------------------------------------------------------------------------
mem_W0:			;@ Rom read ($0000-$1FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl]
	strb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_W7:			;@ Rom read ($E000-$FFFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+28]
	strb r0,[r1,addy]
	cmp addy,#0xFC00
	bxcc lr
// Take care of IO writes
	mov r11,r11
	bx lr

;@----------------------------------------------------------------------------
mem_R0:			;@ Rom read ($0000-$1FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R1:			;@ Rom read ($2000-$3FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+4]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R2:			;@ Rom read ($4000-$5FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+8]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R3:			;@ Rom read ($6000-$7FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+12]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R4:			;@ Rom read ($8000-$9FFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+16]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R5:			;@ Rom read ($A000-$BFFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+20]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R6:			;@ Rom read ($C000-$DFFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+24]
	ldrb r0,[r1,addy]
	bx lr
;@----------------------------------------------------------------------------
mem_R7:			;@ Rom read ($E000-$FFFF)
;@----------------------------------------------------------------------------
	ldr r1,[m6502ptr,#m6502MemTbl+28]
	ldrb r0,[r1,addy]
	cmp addy,#0xFC00
	bxcc lr
// Take care of IO writes
	mov r11,r11
	bx lr
;@----------------------------------------------------------------------------
	.end
#endif // #ifdef __arm__
